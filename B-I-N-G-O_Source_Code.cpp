/////////////////////////////
//    HEADER FILES USED    //  
/////////////////////////////
#include<iostream>
using namespace std;
#include<conio.h>
#include<stdio.h>
#include<cstdlib>
#include<time.h>
#include <string>
#include <Windows.h>

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
COORD CursorPosition;

int bingo[5][5];
int bingo2[5][5];

/////////////////////////////
//      FUNCTIONS USED     //
/////////////////////////////
void main_menu();           //Function for Main Menu
void game();                //Function to Print BINGO on Screen
void new_game();            //Function for Menu of New Game
void how_to_play();         //Function for How To Play
void credits();             //Function for Showing Credits
void review_feedback();     //Function for Take Review or Feedback From User
void user_vs_cpu();         //Function for Menu of User vs CPU
void make_chart();          //Function for Creating BINGO Chart by User
void random_chart();        //Function to Create Random BINGO Chart for User
void cross_user();          //Function for Cross a Number from User Chart by USER
void cross_cpu(int);        //Function to Cross the CPU Chart by the Number inputted by User
void random_chart_cpu();    //Function for Creating a Random BINGO Chart for CPU
void cross_rand_cpu();      //Function to Generate a Number And Cross the CPU chart
void cross_rand_user(int);  //Function to cross the User Chart whose Number is Generated by CPU
void start_game();          //Function for TOSS and Start the Game
void check_user();          //Function to Check the User Chart Wheter B-I-N-G-O is Done or Not
void check_cpu();           //Function to Check the CPU Chart Wheter B-I-N-G-O is Done or Not
void fun();                 //Function to Show the CPU BINGO Chart
void fun1();                //Function to Show the USER BINGO Chart
void hard_level();          //Function for Hard Level
void easy_level();			//Function for Easy Level
void hard_user();           //Function for Cross User Chart in HARD LEVEL
void hard_cpu(int);         //Function for Cross CPU Chart Random in HARD LEVEL     
void hard_rand_cpu();       //Function for Generate & Cross CPU Chart Random in HARD LEVEL
void hard_rand_user(int);   //Function for Cross User Chart Random in HARD LEVEL     
void gotoXY(int x, int y);  //Function for move BINGO

///////////////////////////////  
//     MAIN FUNCTION         // 
///////////////////////////////
int main()
{
	system("cls");
	game();
	getch();
	main_menu();
	return 0;
}

///////////////////////////////
//     FUNCTION TO PRINT     //
//      BINGO ON SCREEN      //
///////////////////////////////
void game()
{
int i=0,j=80,k=0;

	do
	{
		system("cls");
		gotoXY(i,5);
		cout<<"####     ##   ##    ##     ##       ##";
		gotoXY(i,6);
		cout<<"#####    ##   ###   ##    ####     ####";
		gotoXY(i,7);
		cout<<"##  ##   ##   ####  ##   ##  ##   ##  ##";
		gotoXY(i,8);
		cout<<"#####    ##   ## ## ##   ##       ##  ##";
		gotoXY(i,9);
		cout<<"#####    ##   ##  ####   ##  ##   ##  ##";
		gotoXY(i,10);
		cout<<"##  ##   ##   ##   ###   ######   ##  ##";
		gotoXY(i,11);
		cout<<"#####    ##   ##    ##    #####    ####";
		gotoXY(i,12);
		cout<<"####     ##   ##    ##       ##     ##";
		
		i++;
		
	} while(i!=80);
	
	
	do
	{
		system("cls");
		gotoXY(j,5);
		cout<<"####     ##   ##    ##     ##       ##";
		gotoXY(j,6);
		cout<<"#####    ##   ###   ##    ####     ####";
		gotoXY(j,7);
		cout<<"##  ##   ##   ####  ##   ##  ##   ##  ##";
		gotoXY(j,8);
		cout<<"#####    ##   ## ## ##   ##       ##  ##";
		gotoXY(j,9);
		cout<<"#####    ##   ##  ####   ##  ##   ##  ##";
		gotoXY(j,10);
		cout<<"##  ##   ##   ##   ###   ######   ##  ##";
		gotoXY(j,11);
		cout<<"#####    ##   ##    ##    #####    ####";
		gotoXY(j,12);
		cout<<"####     ##   ##    ##       ##     ##";
		gotoXY(j,15);
		cout<<"                   BY";
		gotoXY(j,16);
		cout<<"             CHANDAN TIWARI  ";
		j--;
		

	} while(j!=35);
}

///////////////////////////////
//     FUNCTION TO MOVE      //
//      CURSOR POSITION      //
///////////////////////////////
void gotoXY(int x, int y)
{
	CursorPosition.X = x;
	CursorPosition.Y = y;
	SetConsoleCursorPosition(console,CursorPosition);
}

///////////////////////////////
//      FUNCTION FOR         //
//         MAIN MENU         //
/////////////////////////////// 
void main_menu()
{
	int ch;
	while(1)
	{
		system("cls");
		cout<<"\n\n\t\t\t\t\t   BINGO\n\t\t\t\t\t   =====\n\n";
		cout<<"\n\n\n";
		cout<<"\n\t\t\t\t1. NEW GAME";
		cout<<"\n\n\t\t\t\t2. HOW TO PLAY";
		cout<<"\n\n\t\t\t\t3. REVIEW AND FEEDBACK";
		cout<<"\n\n\t\t\t\t4. CREDITS";
		cout<<"\n\n\t\t\t\t5. QUIT";
		cout<<"\n\n\n\t\t\t\tEnter your choice:";
		cin>>ch;
	
		switch(ch)
		{
			case 1: system("cls");
					new_game();
					getch();
					break;
				
			case 2: system("cls");
					how_to_play();
					getch();
					break;
				
			case 3: system("cls");
					review_feedback();
					getch();
					break;
				
			case 4: system("cls");
					credits();
					getch();
					break;
				
			case 5: exit(0);
		
			default: cout<<"\nPlease Enter the Correct Option...";
					 getch();							
		}
	}	
}

///////////////////////////////
//    FUNCTION FOR MENU      //
//       OF NEW GAME         //
/////////////////////////////// 
void new_game()
{
	int ch;
	while(1)
	{
		system("cls");
		cout<<"\n\n\t\t1. 1P v/s CPU";
		cout<<"\n\n\t\t2. MULTIPLAYER USING WIFI";
		cout<<"\n\n\t\t3. BACK TO MAIN MENU";
		cout<<"\n\n\t\t4. QUIT";
		cout<<"\n\n\n\tEnter your Choice:";
		cin>>ch;
		
		switch(ch)
		{
			case 1: system("cls");
					user_vs_cpu();
					getch();
					break;
					
			case 2: system("cls");
					cout<<"\n\n\tSORRY....\n\tThis version is not available right now....";	
					getch();
					break;
					
			case 3: system("cls");
					main_menu();
					getch();
					break;
					
			case 4: exit(0);
			
			default: cout<<"\n\n\tEnter Correct Option...";
					 getch();					
		}
	}
}

//////////////////////////////
//     FUNCTION TO SHOW     //
//       HOW TO PLAY        //
////////////////////////////// 
void how_to_play()
{
	system("cls");
	cout<<"\n\n\t\t\tHOW TO PLAY\n\t\t\t===========";
	cout<<"\n\n-> Make your BINGO chart by enter the numbers between 1-25";
	cout<<"\n-> Enter any number(between 1-25) of your choice in the blocks on your BINGO chart";
	cout<<"\n-> To enter the number into the Specified block you must Enter the Row and Column where you want to place the number";
	cout<<"\n-> Now Start the Game by Tossing";
	cout<<"\n-> Now start the game by calling any number";
	cout<<"\n-> Likewise Opponent will call the numbers";
	cout<<"\n-> The numbers called by you and your Opponent will crossed";
	cout<<"\n-> And you can crossed Horizontally, Vertically, and Diagonally i.e \n\n\t0      0  0      \n\t0     0    0\n\t0    0      0      0 0 0 0 0\n\t0   0        0\n\t0  0          0\n\n";
	cout<<"\n-> First 5 number crossed in any directions(above mention directions) makes your 'B' and other 5 number crossed makes 'I' and games goes on upto pairing 5 times of 5 numbers";
	cout<<"\n-> Who makes BINGO fisrt will won the match";
	cout<<"\n\nPRESS ANY KEY TO GO TO MAIN MENU...";
	getch();
	main_menu();
}

//////////////////////////////
//   FUNCTION FOR TAKING    //
//   REVIEW AND FEEDBACK    //
//        FROM USER         //
//////////////////////////////
void review_feedback()
{
	char comment[125];
	system("cls");
	cout<<"\n\n\t\tREVIEW BINGO\n\t\t============";
	cout<<"\n\n\n";
	cout<<"\nEnter your Comments...(Max Characters 125)\n\n";
	fflush(stdin);
	gets(comment);
	cout<<"\n\n\n\tTHANK YOU FOR YOUR FEEDBACK";
	cout<"\n\n\tKeep Playing BINGO...";
	
	cout<<"\n\n\n\tPress any Key to go to MAIN MENU";
	getch();
	
	main_menu();
}

//////////////////////////////
//   FUNCTION TO SHOW THE   //
//  CREDITS FOR THIS GAMES  //
//////////////////////////////
void credits()
{
	system("cls");
	cout<<"\n\n\t\tMADE BY\n\n\n\t ***CHANDAN TIWARI***\n\n\t   B.TECH 2nd YEAR";
	getch();
	
	main_menu();
}

//////////////////////////////
//   FUNCTION FOR MENU OF   //
//         NEW GAME         //
//////////////////////////////
void user_vs_cpu()
{
	int ch;
	random_chart_cpu();
	while(1)
	{
		system("cls");
		cout<<"\n\n\t\t1. Play EASY Level";
		cout<<"\n\n\t\t2. Play HARD Level";
		cout<<"\n\n\t\t3. Back to Main Menu";
		cout<<"\n\n\t\tEnter your Choice:";
		cin>>ch;
		
		switch(ch)
		{
			case 1: system("cls");
					easy_level();
					getch();
					break;
					
			case 2: system("cls");
					cout<<"\n\n\t\t\t\tWARNING:\n\t\t\t\t========\n\n\t\tUSER CANNOT SEE HIS/HER BINGO CHART\n\n\tYOU CAN ONLY CROSS THE NUMBER WITHOUT SEEING YOUR CHART\n";
					getch();
					hard_level();
					getch();
					break;		
					
			case 3: system("cls");
					main_menu();
					getch();
					break;
					
			default: cout<<"\n\n\tPlease Enter correct Option...";
					 getch();								
		}
	}
}


void easy_level()
{
	int ch;
	random_chart_cpu();
	while(1)
	{
		system("cls");
		cout<<"\n\n\t\t1. Make your BINGO Chart";
		cout<<"\n\n\t\t2. Use Random Chart";
		cout<<"\n\n\t\t3. Back Menu";
		cout<<"\n\n\t\t4. Back to Main Menu";
		cout<<"\n\n\t\t Enter your Choice:";
		cin>>ch;
		
		switch(ch)
		{
			case 1: system("cls");
					make_chart();
					getch();
					break;
					
			case 2: system("cls");
					random_chart();
					getch();
					break;
					
			case 3: system("cls");
					user_vs_cpu();
					getch();
					break;
					
			case 4: system("cls");
					main_menu();
					getch();
					break;
					
			default:cout<<"\n\n\tPlease Enter correct Option...";
					getch();						
		}
	}
} 



////////////////////////////////
//       FUNCTION FOR         //
//        HARD LEVEL          //
////////////////////////////////
void hard_level()
{
	system("cls");
	srand(time(NULL));
	int i,j,k,num,count=0;
	{
		int arr[25],i,j,k,num;
	srand(time(NULL));
	num=rand()%25+1;
	arr[0]=num;
	
	for(i=1;i<25;i++)
	{
		num=rand()%25+1;
		for(j=0;j<i;j++)
		{
			if(num==arr[j])
			{
				i--;
				break;
			}
		}
		if(j>=i)
		arr[i]=num;
	}
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			bingo[i][j]=arr[k];
			k++;
		}
	}
	
	cout<<"\n\nPress any Key to START the Game...";
	getch();
	}
	
	char ch;
	int temp;
	cout<<"\n\n\t\tTOSS\n\t\t====\n";
	cout<<"\n\n\tPlease Choose 'HEADS' or 'TAILS'...";
	cout<<"\n\nPress 'H' for Heads";
	cout<<"\n\nPress 'T' for Tails";
	cout<<"\n\nEnter your Choice:";
	cin>>ch;
	
	temp=rand()%2;
	
	switch(temp)
	{	
		case 0: system("cls");
				hard_user();
				break;
				
		case 1: system("cls");
				hard_rand_cpu();
				getch();
				break;
	}
}

///////////////////////////////
//  FUNCTION FOR CROSS USER  //
//    CHART IN HARD LEVEL    //
///////////////////////////////
void hard_user()
{
	check_user();
	check_cpu();
	system("cls");
	int num,i,j,count=0;
	cout<<"\n\nEnter the Number u want to Crossed";
	cin>>num;
		
	for(i=0;i<5;i++)
	for(j=0;j<5;j++)
	{
		count=0;
		if(num==bingo[i][j])
		{
			bingo[i][j]=0;
			goto again;
		}
		else
		{
			count++;
		}
	}
	again:
	if(count==1)
	{
		cout<<"\n\nThis number is already Crossed...";
		getch();
		hard_user();
	}
	getch();	
	check_user();
	hard_cpu(num);
}

///////////////////////////////
//  FUNCTION FOR CROSS USER  //
//    CHART RANDOM IN        //
//       HARD LEVEL          //
///////////////////////////////
void hard_rand_user(int num)
{
	check_user();
	check_cpu();
	system("cls");
	int i,j;
	
		for(i=0;i<5;i++)
		for(j=0;j<5;j++)
		{
			if(num==bingo[i][j])
			{
				bingo[i][j]=0;
			}
		}
		
		getch();
		
		check_cpu();
		hard_user();
}

///////////////////////////////
//  FUNCTION FOR GENERATE &  //
//      CROSS CPU CHART      //
//    RANDOM IN HARD LEVEL   //
///////////////////////////////  
void hard_rand_cpu()
{
	check_user();
	check_cpu();
	system("cls");
	int num,i,j,count;
	srand(time(NULL));
	num=rand()%25+1;
	
	cout<<"\n\n\n\t\t\tNUMBER IS:\n\n\t\t\t   "<<num;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			count=0;
			if(num==bingo2[i][j])
			{
				bingo2[i][j]=0;
				goto next;
			}
			else
			count++;
		}
	}
	next:
		if(count==1)
		{
			cout<<"\n\nThis Number is Already crossed...";
			getch();
			hard_rand_cpu();
		}
	getch();
	check_cpu();
	hard_rand_user(num);
}

///////////////////////////////
//  FUNCTION FOR CROSS CPU   //
//    CHART RANDOM IN        //
//       HARD LEVEL          //
/////////////////////////////// 
void hard_cpu(int num)
{
	check_user();
	check_cpu();
	system("cls");
	int i,j;
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			if(num==bingo2[i][j])
			{
				bingo2[i][j]=0;
			}
		}
	}
	getch();
	check_cpu();
	hard_rand_cpu();
}

///////////////////////////////
//      FUNCTION TO SHOW     //
//     BINGO CHART OF CPU    //
///////////////////////////////      
void fun()
{
	int i,j;
	cout<<"\n\n";
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			cout<<bingo2[i][j]<<"\t";
		}
		cout<<"\n\n\n";
	}
}

///////////////////////////////
//     FUNCTION TO SHOW      //
//    BINGO CHART OF USER    //
///////////////////////////////
void fun1()
{
	cout<<"\n\n";
	int i,j;
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			cout<<bingo[i][j]<<"\t";
		}
		cout<<"\n\n\n";
	}
}

///////////////////////////////
//   FUNCTION TO MAKE BINGO  //
//       CHART BY USER       //
///////////////////////////////
void make_chart()
{
	int i,j,k,l,num,pos,count,temp=0;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			temp++;
			bingo[i][j]=temp;
		}
	}
	
	for(l=0;l<25;l++)
	{
		system("cls");
		for(i=0;i<5;i++)
		{
			for(j=0;j<5;j++)
			{
				cout<<bingo[i][j]<<"\t";
			}
			cout<<"\n\n\n";
		}
	
		cout<<"\n\nEnter the number into the given position....";
		cout<<"\n\nEnter the Number:";
		cin>>num;
		cout<<"\nEnter the Position(position will choose from above chart)";
		cin>>pos;
		count=0;
		for(j=0;j<5;j++)
		{
			for(k=0;k<5;k++)
			{
				if(count==pos-1)
				{
					bingo[j][k]=num;
				}
				count++;
			}
		}
	}
	
	cout<<"\n\nPress any Key for START the Game...";
	getch();
	start_game();	
}

///////////////////////////////
//    FUNCTION TO CREATE     //
//    RANDOM BINGO CHART     //
//        FOR USER           //
///////////////////////////////
void random_chart()
{
	int arr[25],i,j,k,num;
	srand(time(NULL));
	num=rand()%25+1;
	arr[0]=num;
	
	for(i=1;i<25;i++)
	{
		num=rand()%25+1;
		for(j=0;j<i;j++)
		{
			if(num==arr[j])
			{
				i--;
				break;
			}
		}
		if(j>=i)
		arr[i]=num;
	}
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			bingo[i][j]=arr[k];
			k++;
		}
	}
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		cout<<bingo[i][j]<<"\t";
		cout<<"\n\n\n";
	}
	
	cout<<"\n\nPress any Key to START the Game...";
	getch();
	
	start_game();
}

///////////////////////////////
//   FUNCTION FOR TOSS TO    // 
//     START THE GAME        //
///////////////////////////////
void start_game()
{
	system("cls");
	char ch;
	int temp;
	cout<<"\n\n\t\tTOSS\n\t\t====\n";
	cout<<"\n\n\tPlease Choose 'HEADS' or 'TAILS'...";
	cout<<"\n\nPress 'H' for Heads";
	cout<<"\n\nPress 'T' for Tails";
	cout<<"\n\nEnter your Choice:";
	cin>>ch;
	ch=toupper(ch);
	switch(ch)
	{
		case 'H': srand(time(NULL));
				  temp=rand()%2;
				  if(temp==1)
				  {
		           cout<<"\nYOU WON....";
		           getch();
				  cross_user();
					}
				  else
				  {
				  	cout<<"\n\tSorry!!! CPU wins....";
				  	cross_rand_cpu();
				  }
				  getch();
				  break;
				  
		case 'T': srand(time(NULL));
				  temp=rand()%2;
				  if(temp==1)
				  {
				  	cout<<"\n\nYOU WON...\n";
				  	getch();
				  	cross_user();
				  }
				  else
				  {
				  	cout<<"\n\tSorry!!! CPU wins....\n";
				  	cross_rand_cpu();
				  }
				  getch();
				  break;		   
	}
}

///////////////////////////////
//    FUNCTION TO CREATE     //
//    RANDOM BINGO CHART     //
//         FOR CPU           //
///////////////////////////////
void random_chart_cpu()
{
	int arr[25],i,j,k,num;
	srand(time(NULL));
	num=rand()%25+1;
	arr[0]=num;
	
	for(i=1;i<25;i++)
	{
		num=rand()%25+1;
		for(j=0;j<i;j++)
		{
			if(num==arr[j])
			{
				i--;
				break;
			}
		}
		if(j>=i)
		arr[i]=num;
	}
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			bingo2[i][j]=arr[k];
			k++;
		}
	}		
}

///////////////////////////////
//    FUNCTION TO CROSS A    //
//    NUMBER GENERATED BY    //
//        THE USER           //
///////////////////////////////
void cross_user()
{
	check_user();
	check_cpu();
	system("cls");
	int i,j,k,num,count=0;
	
		for(i=0;i<5;i++)
			{
				for(j=0;j<5;j++)
				{
					cout<<bingo[i][j]<<"\t";
				}
			cout<<"\n\n\n";
			}
	
		cout<<"\n\nEnter the Number u want to Crossed";
		cin>>num;
		
	    for(i=0;i<5;i++)
		for(j=0;j<5;j++)
		{
			count=0;
			if(num==bingo[i][j])
			{
				bingo[i][j]=0;
				goto again;
			}
			else
			{
				count++;
			}
		}
		again:
		if(count==1)
		{
			cout<<"\n\nThis number is already Crossed...";
			getch();
			cross_user();
		}
		
		system("cls");
		for(i=0;i<5;i++)
			{
				for(j=0;j<5;j++)
				{
					cout<<bingo[i][j]<<"\t";
				}
			cout<<"\n\n\n";
			}
		
		check_user();
		cross_cpu(num);	
}

///////////////////////////////
//   FUNCTION TO CROSS THE   //
//  USER CHART WHOSE NUMBER  //
//    IS GENERATED BY CPU    //
///////////////////////////////
void cross_rand_user(int num)
{
	check_user();
	check_cpu();
	int i,j;
	
		for(i=0;i<5;i++)
		for(j=0;j<5;j++)
		{
			if(num==bingo[i][j])
			{
				bingo[i][j]=0;
			}
		}
		
		getch();
		
		check_cpu();
		cross_user();
	
	
}

///////////////////////////////
//   FUNCTION TO GENERATE A  //
//  NUMBER BY CPU AND CROSS  //  
//      THE CPU CHART        //
///////////////////////////////
void cross_rand_cpu()
{
	check_user();
	check_cpu();
	int num,i,j,count;
	srand(time(NULL));
	num=rand()%25+1;
	
	cout<<"\n\n\n\t\t\tNUMBER IS:\n\n\t\t\t   "<<num;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			count=0;
			if(num==bingo2[i][j])
			{
				bingo2[i][j]=0;
				goto next;
			}
			else
			count++;
		}
	}
	next:
		if(count==1)
		{
			cout<<"\n\nThis Number is Already crossed...";
			getch();
			cross_rand_cpu();
		}

	check_cpu();
	cross_rand_user(num);		
}

///////////////////////////////
// FUNCTION TO CROSS THE CPU //
//    CHART BY THE NUMBER    //
//     INPUTTED BY USER      //
///////////////////////////////
void cross_cpu(int num)
{
	check_user();
	check_cpu();
	int i,j;
	
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			if(num==bingo2[i][j])
			{
				bingo2[i][j]=0;
			}
		}
	}
	
	check_cpu();
	cross_rand_cpu();
}

//////////////////////////////
//   FUNCTION TO CHECK THE  //
//  B-I-N-G-O FOR THE USER  //
//////////////////////////////
void check_user()
{ 
	int count=0;
	if(bingo[0][0]==0&&bingo[0][1]==0&&bingo[0][2]==0&&bingo[0][3]==0&&bingo[0][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[1][0]==0&&bingo[1][1]==0&&bingo[1][2]==0&&bingo[1][3]==0&&bingo[1][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[2][0]==0&&bingo[2][1]==0&&bingo[2][2]==0&&bingo[2][3]==0&&bingo[2][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[3][0]==0&&bingo[3][1]==0&&bingo[3][2]==0&&bingo[3][3]==0&&bingo[3][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[4][0]==0&&bingo[4][1]==0&&bingo[4][2]==0&&bingo[4][3]==0&&bingo[4][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][0]==0&&bingo[1][0]==0&&bingo[2][0]==0&&bingo[3][0]==0&&bingo[4][0]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][1]==0&&bingo[1][1]==0&&bingo[2][1]==0&&bingo[3][1]==0&&bingo[4][1]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][2]==0&&bingo[1][2]==0&&bingo[2][2]==0&&bingo[3][2]==0&&bingo[4][2]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][3]==0&&bingo[1][3]==0&&bingo[2][3]==0&&bingo[3][3]==0&&bingo[4][3]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][4]==0&&bingo[1][4]==0&&bingo[2][4]==0&&bingo[3][4]==0&&bingo[4][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][0]==0&&bingo[1][1]==0&&bingo[2][2]==0&&bingo[3][3]==0&&bingo[4][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo[0][4]==0&&bingo[1][3]==0&&bingo[2][2]==0&&bingo[3][1]==0&&bingo[4][0]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\tB-I-N-G-O\n\n\t\t YOU WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
}

//////////////////////////////
//   FUNCTION TO CHECK THE  //
//   B-I-N-G-O FOR THE CPU  //
//////////////////////////////
void check_cpu()
{
	int i,j;
	int count=0;
	if(bingo2[0][0]==0&&bingo2[0][1]==0&&bingo2[0][2]==0&&bingo2[0][3]==0&&bingo2[0][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[1][0]==0&&bingo2[1][1]==0&&bingo2[1][2]==0&&bingo2[1][3]==0&&bingo2[1][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[2][0]==0&&bingo2[2][1]==0&&bingo2[2][2]==0&&bingo2[2][3]==0&&bingo2[2][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[3][0]==0&&bingo2[3][1]==0&&bingo2[3][2]==0&&bingo2[3][3]==0&&bingo2[3][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[4][0]==0&&bingo2[4][1]==0&&bingo2[4][2]==0&&bingo2[4][3]==0&&bingo2[4][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][0]==0&&bingo2[1][0]==0&&bingo2[2][0]==0&&bingo2[3][0]==0&&bingo2[4][0]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][1]==0&&bingo2[1][1]==0&&bingo2[2][1]==0&&bingo2[3][1]==0&&bingo2[4][1]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][2]==0&&bingo2[1][2]==0&&bingo2[2][2]==0&&bingo2[3][2]==0&&bingo2[4][2]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][3]==0&&bingo2[1][3]==0&&bingo2[2][3]==0&&bingo2[3][3]==0&&bingo2[4][3]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][4]==0&&bingo2[1][4]==0&&bingo2[2][4]==0&&bingo2[3][4]==0&&bingo2[4][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][0]==0&&bingo2[1][1]==0&&bingo2[2][2]==0&&bingo2[3][3]==0&&bingo2[4][4]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
	if(bingo2[0][4]==0&&bingo2[1][3]==0&&bingo2[2][2]==0&&bingo2[3][1]==0&&bingo2[4][0]==0)
	{
		system("cls");
		count++;
		if(count==5)
		{
			printf("\n\n\t\t\t   B-I-N-G-O\n\n\t\t\tComputer WIN\n\n\n\n");
		
		cout<<"\n\n\t\tCOMPUTER'S CHART\n\t\t================\n\n";
		fun();
		cout<<"\n\n\t\tUSER CHART\n\t\t==========\n\n";
		fun1();
		cout<<"\n\n\tPress Any Key to go to MAIN MENU...";
		getch();
		main_menu();
		}
	}
}

